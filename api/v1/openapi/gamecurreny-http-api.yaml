openapi: 3.0.0
info:
  description: API for game currency
  version: 1.0.0
  title: Game Currency API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8081/game-currency/v1'
paths:
  /v1/currencies:
    get:
      operationId: getCurrency
      summary: Returns all currencies stored in database
      description: 'This will returns all of available currency in your database'
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          example: 'Basic xyz-12345-51415'
      responses:
        '200':
          description: list currencies response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyList'
        '401':
          description: unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'unauthorized'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
    post:
      operationId: createCurrency
      summary: Creates a new currency
      description: 'This endpoint is used to add new currency, using only name in body payload. see example.'
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          example: 'Basic xyz-12345-51415'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
            example:
              name: 'knut'
      responses:
        '201':
          description: created new currency response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSuccessReturn'
              example:
                status: 'success'
        '400':
          description: invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCurrencyInvalidPayload'
              example:
                error: 'error invalid payload'
        '422':
          description: name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'error currency already exist'
        '401':
          description: unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'unauthorized'
        '5XX':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'internal server error'
  /v1/conversions:
    post:
      operationId: createConversion
      summary: Creates a new conversion rate
      description: 'This endpoint is used to create new conversion rate between two currencies. See example'
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            example: 'Basic xyz-12345-51415'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionRequest'
            example:
              currency_id_from: 1
              currency_id_to: 2
              rate: 29
      responses:
        '201':
          description: created new conversion rate
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/CreateSuccessReturn'
              example:
                status: 'success'
        '422':
          description: conversion rate mapping already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'error this conversion already exist'
        '401':
          description: unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'unauthorized'
        '5XX':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'internal server error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'unexpected error'
    get:
      operationId: getConversionAmount
      summary: Gets converted currency
      description: 'This endpoint is used to get conversion of currency, it is capable to calculate in reverse order between source currency and destination currency if their mapping is already available on database'
      parameters:
        - in: query
          name: currency_id_from
          schema:
            type: integer
            format: int64
            example: 1
          description: source currency id to get amount
          required: true
        - in: query
          name: currency_id_to
          schema:
            type: integer
            format: int64
            example: 2
          description: target currency id to get amount
          required: true
        - in: query
          name: amount
          schema:
            type: integer
            format: int64
            example: 580
          description: amount to get converted
          required: true
      responses:
        '200':
          description: 'results of converted amount'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionReturn'
              example:
                result: 29
        '422':
          description: conversion rate mapping does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'error no conversion for these currencies'
        '401':
          description: unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'unauthorized'
        '5XX':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
              example:
                error: 'internal server error'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    CurrencyList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
      required: [data]

    Currency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        id: 1
        name: 'Knut'
      required:
        - name
        - id

    CreateSuccessReturn:
      type: object
      properties:
        status:
          type: string

    CreateCurrencyInvalidPayload:
      type: object
      properties:
        error:
          type: string
        detail:
          type: object
          properties:
            name:
              type: string

    Conversion:
      type: object
      properties:
        currency_id_from:
          type: integer
          format: int64
        currency_id_to:
          type: integer
          format: int64
        rate:
          type: integer
          format: int64
      required:
        - currency_id_from
        - currency_id_to
        - rate

    ConversionRequest:
      type: object
      properties:
        currency_id_from:
          type: integer
          format: int64
        currency_id_to:
          type: integer
          format: int64
        rate:
          type: integer
          format: int64
      required:
        - currency_id_from
        - currency_id_to
        - rate

    ConversionReturn:
      type: object
      properties:
        result:
          type: integer
          format: int64
        error:
          type: string
      required:
        - result


    GenericError:
      type: object
      properties:
        error:
          type: string